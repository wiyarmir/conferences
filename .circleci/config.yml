defaults: &defaults
  working_directory: ~/code
  docker:
    - image: circleci/jdk8:0.1.1
  environment:
    JVM_OPTS: -Xmx3200m
    GRADLE_OPTS: '-Dorg.gradle.daemon=false'
    _JAVA_OPTIONS: "-Xms256m -Xmx1280m -XX:MaxPermSize=350m"

download_gradle_dependencies: &download_gradle_dependencies
  name: Download dependencies
  command: ./gradlew dependencies

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "backend/build.gradle" }}-{{ checksum  "web/build.gradle" }}
      - run: *download_gradle_dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "backend/build.gradle" }}-{{ checksum  "web/build.gradle" }}
      - run:
          name: Build project
          command: ./gradlew stage --stacktrace
      - store_artifacts:
          path: backend/build/libs

  tests:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "backend/build.gradle" }}-{{ checksum  "web/build.gradle" }}
      - run: *download_gradle_dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "backend/build.gradle" }}-{{ checksum  "web/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew test --stacktrace
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git push $HEROKU_URL master

#  ktlint:
#    <<: *defaults
#    steps:
#      - checkout
#      - restore_cache:
#          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run: *download_gradle_dependencies
#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#          name: Run ktlint
#          command: ./gradlew ktlint --stacktrace -PdisablePreDex
#      - store_artifacts:
#          path: app/build/reports
#          destination: reports

workflows:
  version: 2
  pr-checks:
    jobs:
      - build
      - tests
      - deploy:
          requires:
            - build
            - tests
          filters:
            branches:
              only: master
