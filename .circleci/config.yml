defaults: &defaults
  working_directory: ~/code
  docker:
    - image: circleci/jdk8:0.1.1
  environment:
    JVM_OPTS: -Xmx3200m
    GRADLE_OPTS: '-Dorg.gradle.daemon=false'
    _JAVA_OPTIONS: "-Xms256m -Xmx1280m -XX:MaxPermSize=350m"

download_gradle_dependencies: &download_gradle_dependencies
  name: Download dependencies
  command: ./gradlew -PbuildAndroid=false dependencies

version: 2
jobs:
  lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "backend/build.gradle" }}-{{ checksum  "web/build.gradle" }}
      - run: *download_gradle_dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "backend/build.gradle" }}-{{ checksum  "web/build.gradle" }}
      - run:
          name: Lint project
          command: ./gradlew -PbuildAndroid=false detekt
      - run:
          name: Save detekt results
          command: |
            mkdir -p ~/detekt/
            find . -type f -regex ".*/build/reports/detekt/*" -exec cp {} ~/detekt/ \;
          when: always
      - store_test_results:
          path: ~/detekt
      - store_artifacts:
          path: ~/detekt

  build-android:
    <<: *defaults
    docker:
      - image: circleci/android:api-28-alpha
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "android/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew -PbuildAndroid=true dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "android/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew -PbuildAndroid=true :android:assemble
      - store_artifacts:
          path: android/build/reports
          destination: reports
      - store_test_results:
          path: android/build/test-results

  test-android:
    <<: *defaults
    docker:
      - image: circleci/android:api-28-alpha
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "android/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew -PbuildAndroid=true dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "android/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew -PbuildAndroid=true :android:lint :android:test
      - store_artifacts:
          path: android/build/reports
          destination: reports
      - store_test_results:
          path: android/build/test-results

  build-backend:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "backend/build.gradle" }}-{{ checksum  "web/build.gradle" }}
      - run: *download_gradle_dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "backend/build.gradle" }}-{{ checksum  "web/build.gradle" }}
      - run:
          name: Build project
          command: ./gradlew -PbuildAndroid=false :backend:assemble --stacktrace
      - store_artifacts:
          path: backend/build/libs

  build-web:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "backend/build.gradle" }}-{{ checksum  "web/build.gradle" }}
      - run: *download_gradle_dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "backend/build.gradle" }}-{{ checksum  "web/build.gradle" }}
      - run:
          name: Build project
          command: ./gradlew -PbuildAndroid=false :web:assemble --stacktrace
      - store_artifacts:
          path: backend/build/libs

  tests:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "backend/build.gradle" }}-{{ checksum  "web/build.gradle" }}
      - run: *download_gradle_dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars--{{ checksum "build.gradle" }}-{{ checksum  "backend/build.gradle" }}-{{ checksum  "web/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew -PbuildAndroid=false test --stacktrace
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
  deploy-backend:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            ssh-keyscan -H dev.wiyarmir.es >> ~/.ssh/known_hosts
            git push $HEROKU_URL master

workflows:
  version: 2
  pr-checks:
    jobs:
      - lint
      - test-android
      - build-android:
          requires:
            - test-android
      - build-backend:
          requires:
            - lint
      - build-web:
          requires:
            - lint
      - tests:
          requires:
            - lint
      - deploy-backend:
          requires:
            - build-backend
            - build-web
            - tests
          filters:
            branches:
              only: master
