import java.nio.file.Paths

group = 'es.guillermoorellana.keynotedex'
version = keynotedexVersion

apply plugin: "kotlin"
apply plugin: "application"
apply plugin: "com.github.johnrengelman.shadow"

mainClassName = "io.ktor.server.netty.EngineMain"

sourceCompatibility = 1.8

compileKotlin.kotlinOptions.jvmTarget = '1.8'
compileTestKotlin.kotlinOptions.jvmTarget = '1.8'

dependencies {
    implementation project(":common")

    implementation Libs.kotlinStdlib
    implementation Libs.kotlinReflect

    implementation Libs.kotlinxSerializationRuntime

    implementation Libs.ktorLocations
    implementation Libs.ktorFreemaker
    implementation Libs.ktorHtmlBuilder
    implementation Libs.ktorServerNetty
    implementation Libs.ktorClientApache
    implementation Libs.ktorAuthJwt

    implementation Libs.ehcache

    implementation(Libs.squashH2) {
        exclude group: "org.jetbrains.kotlin"
    }

    testImplementation Libs.kotlinTestJunit
    testImplementation Libs.ktorServerTestHost
    testImplementation Libs.jsoup
    testImplementation Libs.mockitoKotlin

    implementation Libs.logbackClassic
    implementation Libs.fuel
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
    archiveClassifier.set('release')
    from({ Paths.get(project(':web').buildDir.path, 'bundle') })
}

tasks['shadowJar'].mustRunAfter clean
tasks['processResources'].mustRunAfter ':web:bundle'

task release() {
    dependsOn('clean')
    dependsOn(':web:bundle')
    dependsOn('shadowJar')
}
